<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dev.pms.roomStatus.RoomStatusDAO">
    <select id="getRoomStatusList"  resultType="RoomStatusVO">
        SELECT
        a.ROOMTYPE,
        a.ROOMNUMBER,
        DATE(a.RESERVATIONDATE) AS reservationDate,
        CASE
        WHEN b.ROOMNUMBER IS NULL THEN NULL
        ELSE MAX(CASE
        WHEN a.ROOMSTATUS = '예약완료' THEN '예약완료'
        WHEN a.ROOMSTATUS = '재실' THEN '재실'
        WHEN a.ROOMSTATUS = '퇴실' THEN '퇴실'
        ELSE 0
        END)
        END AS roomStatus,
        b.NAME,
        b.RESERVATIONNUMBER,
        b.PHONENUMBER,
        b.CHECKINDATE,
        b.CHECKOUTDATE
        FROM
        RESERVED a
        LEFT JOIN
        BOOKING b ON a.ROOMNUMBER = b.ROOMNUMBER
        AND DATE(a.RESERVATIONDATE) >= DATE_SUB(CURDATE(), INTERVAL 1 DAY)
        AND DATE(a.RESERVATIONDATE) &lt; DATE_ADD(DATE_SUB(CURDATE(), INTERVAL 1 DAY), INTERVAL 2 WEEK)
        AND DATE(a.RESERVATIONDATE) BETWEEN b.CHECKINDATE AND b.CHECKOUTDATE
        WHERE
        DATE(a.RESERVATIONDATE) BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 DAY) AND DATE_ADD(DATE_SUB(CURDATE(), INTERVAL 1 DAY), INTERVAL 2 WEEK)
        GROUP BY
        a.ROOMTYPE, a.ROOMNUMBER, DATE(a.RESERVATIONDATE)
        ORDER BY
        a.ROOMTYPE, a.ROOMNUMBER, DATE(a.RESERVATIONDATE);

    </select>

    <select id="getRoomStatusListMonth"  resultType="RoomStatusVO">
    SELECT
    a.ROOMTYPE,
    a.ROOMNUMBER,
        DATE(a.RESERVATIONDATE) AS reservationDate,
        CASE
        WHEN b.ROOMNUMBER IS NULL THEN NULL
        ELSE MAX(CASE
        WHEN a.ROOMSTATUS = '예약완료' THEN '예약완료'
        WHEN a.ROOMSTATUS = '재실' THEN '재실'
        WHEN a.ROOMSTATUS = '퇴실' THEN '퇴실'
        ELSE 0
        END)
        END AS roomStatus,
        b.NAME,
    b.RESERVATIONNUMBER,
    b.PHONENUMBER,
    b.CHECKINDATE,
    b.CHECKOUTDATE
    FROM
    RESERVED a
    LEFT JOIN
    BOOKING b ON a.ROOMNUMBER = b.ROOMNUMBER
    AND DATE(a.RESERVATIONDATE) >= DATE_SUB(CURDATE(), INTERVAL 1 DAY)
    AND DATE(a.RESERVATIONDATE) &lt; DATE_ADD(DATE_SUB(CURDATE(), INTERVAL 1 DAY), INTERVAL 1 MONTH)
    AND DATE(a.RESERVATIONDATE) BETWEEN b.CHECKINDATE AND b.CHECKOUTDATE
    WHERE
    DATE(a.RESERVATIONDATE) BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 DAY) AND DATE_ADD(DATE_SUB(CURDATE(), INTERVAL 1 DAY), INTERVAL 1 MONTH)
    GROUP BY
    a.ROOMTYPE, a.ROOMNUMBER, DATE(a.RESERVATIONDATE)
    ORDER BY
    a.ROOMTYPE, a.ROOMNUMBER, DATE(a.RESERVATIONDATE);
    </select>

    <select id="getRoomStatusListThreeWeeks"  resultType="RoomStatusVO">
        SELECT
        a.ROOMTYPE,
        a.ROOMNUMBER,
        DATE(a.RESERVATIONDATE) AS reservationDate,
        CASE
        WHEN b.ROOMNUMBER IS NULL THEN NULL
        ELSE MAX(CASE
        WHEN a.ROOMSTATUS = '예약완료' THEN '예약완료'
        WHEN a.ROOMSTATUS = '재실' THEN '재실'
        WHEN a.ROOMSTATUS = '퇴실' THEN '퇴실'
        ELSE 0
        END)
        END AS roomStatus,
        b.NAME,
        b.RESERVATIONNUMBER,
        b.PHONENUMBER,
        b.CHECKINDATE,
        b.CHECKOUTDATE
        FROM
        RESERVED a
        LEFT JOIN
        BOOKING b ON a.ROOMNUMBER = b.ROOMNUMBER
        AND DATE(a.RESERVATIONDATE) >= DATE_SUB(CURDATE(), INTERVAL 1 DAY)
        AND DATE(a.RESERVATIONDATE) &lt; DATE_ADD(DATE_SUB(CURDATE(), INTERVAL 1 DAY), INTERVAL 3 WEEK)
        AND DATE(a.RESERVATIONDATE) BETWEEN b.CHECKINDATE AND b.CHECKOUTDATE
        WHERE
        DATE(a.RESERVATIONDATE) BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 DAY) AND DATE_ADD(DATE_SUB(CURDATE(), INTERVAL 1 DAY), INTERVAL 3 WEEK)
        GROUP BY
        a.ROOMTYPE, a.ROOMNUMBER, DATE(a.RESERVATIONDATE)
        ORDER BY
        a.ROOMTYPE, a.ROOMNUMBER, DATE(a.RESERVATIONDATE);
    </select>

    <select id="getCheckinCount" resultType="RoomStatusVO">
        SELECT
        r.RESERVATIONDATE,
        COUNT(t.RESERVATIONDATE) AS CHECKINCOUNT
        FROM
        (SELECT DISTINCT RESERVATIONDATE FROM RESERVED) r
        LEFT JOIN
        RESERVED t ON r.RESERVATIONDATE = t.RESERVATIONDATE AND t.ROOMSTATUS = '재실'
        AND t.RESERVATIONDATE BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 DAY) AND DATE_SUB(DATE_ADD(CURDATE(), INTERVAL 1 MONTH), INTERVAL 1 DAY)
        WHERE
        r.RESERVATIONDATE BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 DAY) AND DATE_SUB(DATE_ADD(CURDATE(), INTERVAL 1 MONTH), INTERVAL 1 DAY)
        GROUP BY
        r.RESERVATIONDATE;
    </select>

    <select id="getReservationCount" resultType="RoomStatusVO">
        SELECT
        r.RESERVATIONDATE,
        COALESCE(COUNT(t.RESERVATIONDATE), 0) AS RESERVATIONCOUNT
        FROM
        (SELECT DISTINCT RESERVATIONDATE FROM RESERVED) r
        LEFT JOIN
        RESERVED t ON r.RESERVATIONDATE = t.RESERVATIONDATE AND t.ROOMSTATUS = '예약완료'
        WHERE
        r.RESERVATIONDATE BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 DAY) AND DATE_SUB(DATE_ADD(CURDATE(), INTERVAL 1 MONTH), INTERVAL 1 DAY)
        GROUP BY
        r.RESERVATIONDATE;
    </select>

    <select id="getRoomStock" resultType="RoomStatusVO">
        SELECT
        r.RESERVATIONDATE,
        (30 - COALESCE(COUNT(t.RESERVATIONDATE), 0)) AS ROOMSTOCK
        FROM
        (SELECT DISTINCT RESERVATIONDATE FROM RESERVED) r
        LEFT JOIN
        RESERVED t ON r.RESERVATIONDATE = t.RESERVATIONDATE
        AND (t.ROOMSTATUS = '재실' OR t.ROOMSTATUS = '예약완료')
        WHERE
        r.RESERVATIONDATE BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 DAY) AND DATE_SUB(DATE_ADD(CURDATE(), INTERVAL 1 MONTH), INTERVAL 1 DAY)
        GROUP BY
        r.RESERVATIONDATE;
    </select>




</mapper>