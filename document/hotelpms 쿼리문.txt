CREATE TABLE `USER` (
  `ID` varchar(100) NOT NULL,
  `PASSWORD` varchar(100) DEFAULT NULL,
  `NAME` varchar(100) DEFAULT NULL,
  `PHONENUMBER` varchar(100) DEFAULT NULL,
  `EMAIL` varchar(100) DEFAULT NULL,
  `ROLENAME` varchar(100) DEFAULT NULL,
  PRIMARY KEY (`ID`)
)

CREATE TABLE `ALARM` (
  `ALARMNUM` int(11) NOT NULL AUTO_INCREMENT,
  `ID` varchar(100) DEFAULT NULL,
  `KIND` varchar(100) DEFAULT NULL,
  `ALARMCONTENT` text DEFAULT NULL,
  `ALARMDATE` date DEFAULT NULL,
  `ALARMURL` varchar(100) DEFAULT NULL,
  PRIMARY KEY (`ALARMNUM`)
)

CREATE TABLE `BOOKING` (
  `RESERVATIONNUMBER` bigint(20) NOT NULL,
  `ROOMNUMBER` int(11) DEFAULT NULL,
  `ID` varchar(100) DEFAULT NULL,
  `ROOMTYPE` varchar(100) DEFAULT NULL,
  `NAME` varchar(100) DEFAULT NULL,
  `RESERVATIONEMAIL` varchar(100) DEFAULT NULL,
  `GUESTCOUNT` varchar(100) DEFAULT NULL,
  `PAYMENTDATE` date DEFAULT NULL,
  `CHECKINDATE` date DEFAULT NULL,
  `CHECKOUTDATE` date DEFAULT NULL,
  `RESERVATIONSTATUS` varchar(100) DEFAULT NULL,
  `PAYMENTAMOUNT` int(11) DEFAULT NULL,
  `PHONENUMBER` varchar(100) DEFAULT NULL,
  PRIMARY KEY (`RESERVATIONNUMBER`)
)

CREATE TABLE `ROOM` (
  `ROOMNUMBER` int(11) NOT NULL,
  `ROOMTYPE` varchar(100) DEFAULT NULL,
  `ROOMNAME` varchar(100) DEFAULT NULL,
  PRIMARY KEY (`ROOMNUMBER`)
)

CREATE TABLE `ROOMTYPE` (
  `ROOMTYPE` varchar(100) NOT NULL,
  `CAPACITY` int(11) DEFAULT NULL,
  `ROOMPRICE` int(11) DEFAULT NULL,
  PRIMARY KEY (`ROOMTYPE`)
)

CREATE TABLE `RESERVED` (
  `RESERVATIONNUM` int(11) NOT NULL AUTO_INCREMENT,
  `RESERVATIONDATE` date DEFAULT NULL,
  `ROOMNUMBER` int(11) DEFAULT NULL,
  `ROOMTYPE` varchar(100) DEFAULT NULL,
  `ROOMSTATUS` varchar(100) DEFAULT NULL,
  PRIMARY KEY (`RESERVATIONNUM`)
)

CREATE TABLE `ROOMCLEAN` (
  `CLEANNUM` int(11) NOT NULL AUTO_INCREMENT,
  `ROOMNUMBER` int(11) DEFAULT NULL,
  `SCHEDULENUMBER` int(11) DEFAULT NULL,
  `DATEOFREGISTRATION` date DEFAULT NULL,
  `CONFIRMATIONSTATUS` varchar(100) DEFAULT NULL,
  `NOTE` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`CLEANNUM`)
)

CREATE TABLE `ROOMCLEANIMAGE` (
  `IMAGEID` int(11) NOT NULL AUTO_INCREMENT,
  `CLEANNUM` int(11) DEFAULT NULL,
  `ORGNAME` varchar(100) DEFAULT NULL,
  `SAVEDNAME` varchar(100) DEFAULT NULL,
  PRIMARY KEY (`IMAGEID`)
)

CREATE TABLE `CALENDER` (
  `SCHEDULENUMBER` int(11) NOT NULL AUTO_INCREMENT,
  `SCHEDULEENDDATE` date DEFAULT NULL,
  `SCHEDULESTARTDATE` date DEFAULT NULL,
  PRIMARY KEY (`SCHEDULENUMBER`)
)

CREATE TABLE `PARTNER` (
  `BUSINESSNUMBER` varchar(100) NOT NULL,
  `CONTACTNAME` varchar(100) DEFAULT NULL,
  `COMPANYNAME` varchar(100) DEFAULT NULL,
  `EMAIL` varchar(100) DEFAULT NULL,
  `ADDRESS` varchar(100) DEFAULT NULL,
  `SETTLEMENTACCOUNT` varchar(100) DEFAULT NULL,
  `PHONENUMBER` varchar(100) DEFAULT NULL,
  `CEONAME` varchar(100) DEFAULT NULL,
  `REGISTRATIONDATE` date NOT NULL,
  `APPROVAL` bit(1) NOT NULL,
  `SECTORS` varchar(100) NOT NULL,
  `UNIQUECHARACTER` CHAR(1)
  PRIMARY KEY (`BUSINESSNUMBER`)
)

CREATE TABLE `PARTNERSTOCK` (
  `ITEMID` int(11) NOT NULL AUTO_INCREMENT,
  `BUSINESSNUMBER` varchar(100) DEFAULT NULL,
  `PRODUCTNAME` varchar(100) DEFAULT NULL,
  `ITEMCODE` varchar(100) DEFAULT NULL,
  `UNIT` int(11) DEFAULT NULL,
  `UNITPRICE` int(11) DEFAULT NULL,
  `REGISTRATIONDATE` date DEFAULT NULL,
  `REMARKS` text DEFAULT NULL,
  `ITEMUSAGESTATUS` bit(1) DEFAULT NULL,
  PRIMARY KEY (`ITEMID`)
)

CREATE TABLE `HOTELSTOCK` (
  `INVENTORYID` int(11) NOT NULL AUTO_INCREMENT,
  `ITEMID` int(11) DEFAULT NULL,
  `CURRENTSTOCK` int(11) DEFAULT NULL,
  `AUTOORDERQUANTITY` int(11) DEFAULT NULL,
  `ORDERSTATUS` varchar(100) DEFAULT NULL,
  PRIMARY KEY (`INVENTORYID`)
)

CREATE TABLE `ROOMSTOCK` (
  `ROOMTYPE` varchar(100) DEFAULT NULL,
  `INVENTORYID` int(11) DEFAULT NULL,
  `COUNT` int(11) DEFAULT NULL,
)

CREATE TABLE `STOCKMONTH` (
  `USERNUM` int(11) NOT NULL AUTO_INCREMENT,
  `ITEMID` int(11) DEFAULT NULL,
  `USERDATE` date DEFAULT NULL,
  PRIMARY KEY (`USERNUM`)
)

-- BOOKING 테이블에 대한 FK ALTER TABLE 문
ALTER TABLE `BOOKING`
ADD CONSTRAINT `FK_BOOKING_USER` FOREIGN KEY (`ID`) REFERENCES `USER`(`ID`) ON DELETE CASCADE,
ADD CONSTRAINT `FK_BOOKING_ROOM` FOREIGN KEY (`ROOMNUMBER`) REFERENCES `ROOM`(`ROOMNUMBER`) ON DELETE CASCADE;

-- ALARM 테이블에 대한 FK  ALTER TABLE 문
ALTER TABLE `ALARM`
ADD CONSTRAINT `FK_ALARM_USER` FOREIGN KEY (`ID`) REFERENCES `USER`(`ID`) ON DELETE CASCADE;

-- ROOMCLEANIMAGE 테이블에 대한 FK ALTER TABLE 문
ALTER TABLE `ROOMCLEANIMAGE`
ADD CONSTRAINT `FK_ROOMCLEANIMAGE_ROOMCLEAN` FOREIGN KEY (`CLEANNUM`) REFERENCES `ROOMCLEAN`(`CLEANNUM`) ON DELETE CASCADE;

-- ROOMCLEAN 테이블에 대한 FK ALTER TABLE 문
ALTER TABLE `ROOMCLEAN`
ADD CONSTRAINT `FK_ROOMCLEAN_CALENDER` FOREIGN KEY (`SCHEDULENUMBER`) REFERENCES `CALENDER`(`SCHEDULENUMBER`) ON DELETE CASCADE;
ADD CONSTRAINT `FK_ROOMCLEAN_ROOM` FOREIGN KEY (`ROOMNUMBER`) REFERENCES `ROOM`(`ROOMNUMBER`) ON DELETE CASCADE;

-- ROOM 테이블에 대한 FK ALTER TABLE 문
ALTER TABLE `ROOM`
ADD CONSTRAINT `FK_ROOM_ROOMTYPE` FOREIGN KEY (`ROOMTYPE`) REFERENCES `ROOMTYPE`(`ROOMTYPE`) ON DELETE CASCADE;

-- RESERVED 테이블에 대한 FK ALTER TABLE 문
ALTER TABLE `RESERVED`
ADD CONSTRAINT `FK_RESERVED_ROOM` FOREIGN KEY (`ROOMNUMBER`) REFERENCES `ROOM`(`ROOMNUMBER`) ON DELETE CASCADE;

-- PARTNERSTOCK 테이블에 대한 FK ALTER TABLE 문
ALTER TABLE `PARTNERSTOCK`
ADD CONSTRAINT `FK_PARTNERSTOCK_PARTNER` FOREIGN KEY (`BUSINESSNUMBER`) REFERENCES `PARTNER`(`BUSINESSNUMBER`) ON DELETE CASCADE;

-- HOTELSTOCK 테이블에 대한 FK ALTER TABLE 문
ALTER TABLE `HOTELSTOCK`
ADD CONSTRAINT `FK_HOTELSTOCK_PARTNERSTOCK` FOREIGN KEY (`ITEMID`) REFERENCES `PARTNERSTOCK`(`ITEMID`) ON DELETE CASCADE;

-- ROOMSTOCK 테이블에 대한 FK ALTER TABLE 문
ALTER TABLE `ROOMSTOCK`
ADD CONSTRAINT `FK_ROOMSTOCK_ROOMTYPE` FOREIGN KEY (`ROOMTYPE`) REFERENCES `ROOMTYPE`(`ROOMTYPE`) ON DELETE CASCADE,
ADD CONSTRAINT `FK_ROOMSTOCK_HOTELSTOCK` FOREIGN KEY (`INVENTORYID`) REFERENCES `HOTELSTOCK`(`INVENTORYID`) ON DELETE CASCADE;

-- STOCKMONTH 테이블에 대한 FK ALTER TABLE 문
ALTER TABLE `STOCKMONTH`
ADD CONSTRAINT `FK_STOCKMONTH_HOTELSTOCK` FOREIGN KEY (`ITEMID`) REFERENCES `HOTELSTOCK`(`INVENTORYID`) ON DELETE CASCADE;


-- 필수 Dummy Data

-- ROOMTYPE
INSERT INTO ROOMTYPE (ROOMTYPE, CAPACITY, ROOMPRICE)
VALUES ('디럭스', 2, 128000);

INSERT INTO ROOMTYPE (ROOMTYPE, CAPACITY, ROOMPRICE)
VALUES ('트윈', 3, 133000);

INSERT INTO ROOMTYPE (ROOMTYPE, CAPACITY, ROOMPRICE)
VALUES ('스탠다드', 2, 124000);

INSERT INTO ROOMTYPE (ROOMTYPE, CAPACITY, ROOMPRICE)
VALUES ('더블', 3, 133000);

INSERT INTO ROOMTYPE (ROOMTYPE, CAPACITY, ROOMPRICE)
VALUES ('스위트', 4, 271000);

-- ROOM
INSERT INTO ROOM (ROOMNUMBER, ROOMTYPE, ROOMNAME)
VALUES
    (101, '디럭스', CONCAT('디럭스', '101')),
    (102, '스탠다드', CONCAT('스탠다드', '102')),
    (103, '스탠다드', CONCAT('스탠다드', '103')),
    (104, '트윈', CONCAT('트윈', '104')),
    (105, '더블', CONCAT('더블', '105')),
    (201, '디럭스', CONCAT('디럭스', '201')),
    (202, '스탠다드', CONCAT('스탠다드', '202')),
    (203, '더블', CONCAT('더블', '203')),
    (204, '트윈', CONCAT('트윈', '204')),
    (205, '트윈', CONCAT('트윈', '205')),
    (301, '디럭스', CONCAT('디럭스', '301')),
    (302, '스탠다드', CONCAT('스탠다드', '302')),
    (303, '더블', CONCAT('더블', '303')),
    (304, '트윈', CONCAT('트윈', '304')),
    (305, '더블', CONCAT('더블', '305'),),
    (401, '디럭스', CONCAT('디럭스', '401')),
    (402, '디럭스', CONCAT('디럭스', '402')),
    (403, '트윈', CONCAT('트윈', '403')),
    (404, '더블', CONCAT('더블', '404')),
    (405, '스위트', CONCAT('스위트', '405')),
    (501, '스탠다드', CONCAT('스탠다드', '501')),
    (502, '디럭스', CONCAT('디럭스', '502')),
    (503, '트윈', CONCAT('트윈', '503')),
    (504, '더블', CONCAT('더블', '504')),
    (505, '스위트', CONCAT('스위트', '505')),
    (601, '스탠다드', CONCAT('스탠다드', '601')),
    (602, '디럭스', CONCAT('디럭스', '602')),
    (603, '트윈', CONCAT('트윈', '603')),
    (604, '더블', CONCAT('더블', '604')),
    (605, '스위트', CONCAT('스위트', '605'));

-- RESERVED
INSERT INTO RESERVED (RESERVATIONDATE, ROOMNUMBER, ROOMTYPE)
SELECT
    DATE_ADD('2023-01-01', INTERVAL n.num DAY) AS RESERVATIONDATE,
    ROOM.ROOMNUMBER,
    ROOM.ROOMTYPE
FROM (
    SELECT a.num + b.num * 10 + c.num * 100 AS num
    FROM (SELECT 0 AS num UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) a
    CROSS JOIN (SELECT 0 AS num UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) b
    CROSS JOIN (SELECT 0 AS num UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) c
) n
CROSS JOIN ROOM
WHERE
    DATE_ADD('2023-01-01', INTERVAL n.num DAY) <= '2023-12-31';

UPDATE RESERVED
SET ROOMSTATUS= '예약가능';

-- USER (ADMIN과 MANAGER는 미리 생성해야 함, 임의로 적음)
INSERT INTO `USER` VALUES
('ADMIN','123456789','ADMIN','01012122323','Admin123@gmail.com','ROLE_ADMIN'),
('MANAGER','123456789','MANAGER','01021213232','Manager123@gmail.com','ROLE_MANAGER'),